#!/usr/bin/python3
"""
Python Practical Template
Keegan Crankshaw
Readjust this Docstring as follows:
Names: Johanne Jansen van Vuuren    
Student Number: JNSJOH021
Prac: 1
Date: 22/07/2019
"""

# import Relevant Librares
import RPi.GPIO as GPIO
import time
import itertools

GPIO.setwarnings(False)
#variables
LED_001 = 7
LED_010 = 29
LED_100 = 31
switch_up = 33
switch_down = 35

#setup pins
GPIO.setmode(GPIO.BOARD)
GPIO.setup(LED_001, GPIO.OUT) #GPIO4, LED
GPIO.setup(LED_010, GPIO.OUT) #GPIO5, LED
GPIO.setup(LED_100, GPIO.OUT) #GPIO6, LED
GPIO.setup(switch_up, GPIO.IN, pull_up_down=GPIO.PUD_UP) #GPIO13, switch up
GPIO.setup(switch_down, GPIO.IN, pull_up_down=GPIO.PUD_UP) #GPIO19, switch down

#set default values for LEDs
output_list = (LED_001, LED_010, LED_100)
GPIO.output(output_list, GPIO.HIGH) #all LEDs on initially

#Led_status = 1
counter = 0
output = list(itertools.product(range(2), repeat=3))

#callback function
def my_callback(switch_up):
    global counter
    
    
    if (counter !=7):
        counter +=1
        print("Counter =", counter)
        for i in range(len(output)):
            if (i == counter):
                GPIO.output(output_list, output[7-i])
        time.sleep(0.1)
    

    elif (counter == 7):
        
        counter = 0
        print("Counter =", counter)
        for i in range(len(output)):
            if (i == counter):
                GPIO.output(output_list, output[7-i])
        time.sleep(0.1)
    
    return

def my_callback2(switch_down):
    global counter
    if (counter != 0):
        counter -= 1
        print("Counter =", counter)
        for i in range(len(output)):
            if (i == counter):
                GPIO.output(output_list, output[7-i])
        time.sleep(0.1)

    elif (counter == 0):
        
        counter = 7
        print("Counter =", counter)
        for i in range(len(output)):
            if (i == counter):
                GPIO.output(output_list, output[7-i])
        time.sleep(0.1)
    
    #for i in output:
        #if (i== counter):
            #GPIO.output(output_list, output(i))
    
    return
#LED function


# Logic that you write
def main():
    print(output)
    GPIO.add_event_detect(switch_up, GPIO.RISING, callback=my_callback, bouncetime=200)
    GPIO.add_event_detect(switch_down, GPIO.RISING, callback=my_callback2, bouncetime=200)
        
    while True:
        time.sleep(1)


# Only run the functions if 
if __name__ == "__main__":
    # Make sure the GPIO is stopped correctly
    try:
        while True:
            main()
    except KeyboardInterrupt:
        print("Exiting gracefully")
        # Turn off your GPIOs here
        GPIO.cleanup()
    except Exception as e:
        GPIO.cleanup()
        print("Some other error occurred")
        print(e.message)